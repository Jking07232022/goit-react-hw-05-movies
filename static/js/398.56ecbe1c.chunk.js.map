{"version":3,"file":"static/js/398.56ecbe1c.chunk.js","mappings":"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","sources":["API/Api.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/toastConfig.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","pages/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ba8df02c5548f4248e5d9d0723885591';\n\nexport const getApi = async (endPoint, dataQuery) => {\n  const { data } = await axios.get(\n    `${URL}${endPoint}?api_key=${API_KEY}${\n      dataQuery ? `&query=${dataQuery}` : ''\n    }&language=en-US`\n  );\n\n  return data;\n};\nexport const getTrending = async () => await getApi('/trending/movie/day');\n\nexport const getMoviesByName = async name =>\n  await getApi('/search/movie', name);\n","// extracted by mini-css-extract-plugin\nexport default {\"trendingBox\":\"MoviesList_trendingBox__nADPS\",\"trendingItem\":\"MoviesList_trendingItem__ULUxz\",\"trendingItemx\":\"MoviesList_trendingItemx__YKvbs\",\"title\":\"MoviesList_title__PB2c8\",\"link\":\"MoviesList_link__8rTGX\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport images from '../images/film-popkorn-700x466-1-min.jpg';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.trendingBox}>\n      {movies.map(({ id, tagline, title, poster_path }) => {\n        const poster = poster_path\n          ? `https://image.tmdb.org/t/p/w400${poster_path}`\n          : images;\n        return (\n          <li key={id} className={css.trendingItem}>\n            <Link\n              className={css.link}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              <img src={poster} alt={tagline} width={250} />\n              <p className={css.title}>{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","const toastConfig = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport default toastConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"MovieSearch_searchForm__8c7z6\",\"searchFormBtn\":\"MovieSearch_searchFormBtn__BrevM\",\"searchFormBtnInput\":\"MovieSearch_searchFormBtnInput__iLPSt\"};","import PropTypes from 'prop-types';\nimport css from './MovieSearch.module.css';\n\nconst MovieSearch = ({ handleSubmit, changeInput }) => {\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={css.searchFormBtnInput}\n        type=\"text\"\n        name=\"searching\"\n        autoComplete=\"off\"\n        autoFocus\n        onChange={e => changeInput(e.target.value)}\n      />\n      <button type=\"submit\" className={css.searchFormBtn}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nMovieSearch.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default MovieSearch;\n","import { useState, useEffect } from 'react';\nimport { getMoviesByName } from 'API/Api';\nimport toastConfig from 'components/toastConfig';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport MovieSearch from 'components/MovieSearch/MovieSearch';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querySearch = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!querySearch) return;\n\n    async function getMovie() {\n      try {\n        const moviesSearch = await getMoviesByName(querySearch);\n\n        if (moviesSearch.results.length === 0) {\n          toast.warning(`No movies found`, toastConfig);\n          return;\n        }\n        const moviesTitleList = moviesSearch.results.map(\n          ({ tagline, poster_path, title, id }) => {\n            return { title, id, poster_path, tagline };\n          }\n        );\n\n        setMovies(moviesTitleList);\n      } catch (error) {\n        toast.error(error.message, toastConfig);\n      }\n    }\n    getMovie();\n  }, [querySearch, searchParams.size]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searching = e.target.searching.value.trim().toLowerCase();\n    if (searching) {\n      setSearchParams({ query: searching });\n    } else {\n      setSearchParams({});\n      toast.warn('Please enter a request!', toastConfig);\n    }\n  };\n  const changeInput = inputQuery => {\n    if (inputQuery === '') {\n      setSearchParams({});\n      setMovies([]);\n    }\n  };\n  return (\n    <>\n      <MovieSearch handleSubmit={handleSubmit} changeInput={changeInput} />\n\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviePage;\n"],"names":["getApi","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","dataQuery","_yield$axios$get","data","_context","prev","next","axios","concat","sent","abrupt","stop","_x","_x2","apply","arguments","getTrending","_ref2","_callee2","_context2","getMoviesByName","_ref3","_callee3","name","_context3","_x3","movies","location","useLocation","_jsx","className","css","children","map","id","tagline","title","poster_path","poster","images","_jsxs","Link","to","state","from","src","alt","width","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","handleSubmit","changeInput","onSubmit","type","autoComplete","autoFocus","onChange","e","target","value","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","querySearch","get","useEffect","_getMovie","moviesSearch","moviesTitleList","results","length","toast","t0","message","getMovie","size","_Fragment","MovieSearch","preventDefault","searching","trim","toLowerCase","query","inputQuery","MoviesList"],"sourceRoot":""}